// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using persistance.Datacontext;

#nullable disable

namespace persistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230901094149_AddingImageToCompany")]
    partial class AddingImageToCompany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("domain.Entities.crm.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BillingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAcronym")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GVAT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipingZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("Company", "crm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingAddress = "Kralja Petra Kresimira 4",
                            BillingZip = "88000",
                            CompanyAcronym = "COX4",
                            CompanyName = "COX4",
                            CompanyTypeId = 6,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Description = "",
                            Email = "info@cox4.eu",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Phone = "",
                            ShipingAddress = "Blajburskih zrtava 19c",
                            ShipingZip = "88000",
                            WebSite = "cox4.eu"
                        },
                        new
                        {
                            Id = 2,
                            BillingAddress = "Splitska 10",
                            BillingZip = "88000",
                            CompanyAcronym = "MSS",
                            CompanyName = "MSS",
                            CompanyTypeId = 2,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Description = "",
                            Email = "info@cox4.eu",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Phone = "",
                            ShipingAddress = "Splitska10",
                            ShipingZip = "88000",
                            WebSite = "mss.eu"
                        });
                });

            modelBuilder.Entity("domain.Entities.crm.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes", "crm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Communications"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Gowerment Military"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Manufacturing"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Financial Services"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "IT services"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Education"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Consulting"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Management"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("domain.Entities.email.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("domain.Entities.releastate.Catalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CatalogTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogTypeId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Catalogs", "realestate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CatalogTypeId = 1,
                            CompanyId = 1,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is catalog description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "Wooden house",
                            Quote = "Wait..."
                        },
                        new
                        {
                            Id = 2,
                            CatalogTypeId = 1,
                            CompanyId = 1,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is catalog description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "Winter house",
                            Quote = "Wait..."
                        },
                        new
                        {
                            Id = 3,
                            CatalogTypeId = 1,
                            CompanyId = 2,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is catalog description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "Modern house",
                            Quote = "Wait..."
                        },
                        new
                        {
                            Id = 4,
                            CatalogTypeId = 2,
                            CompanyId = 2,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is catalog description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "Buildings",
                            Quote = "Wait..."
                        });
                });

            modelBuilder.Entity("domain.Entities.releastate.CatalogItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApprovedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Bathrooms")
                        .HasColumnType("int");

                    b.Property<float?>("BruttoArea")
                        .HasColumnType("real");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<int?>("CatalogItemStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("CatalogItemTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeploymentStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disclaimer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Floor")
                        .HasColumnType("int");

                    b.Property<float?>("Floors")
                        .HasColumnType("real");

                    b.Property<int?>("GaragePlaces")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDisclamer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<string>("Lamella")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("NetArea")
                        .HasColumnType("real");

                    b.Property<string>("Quote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rooms")
                        .HasColumnType("int");

                    b.Property<int?>("Units")
                        .HasColumnType("int");

                    b.Property<Guid>("VersionIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CatalogId");

                    b.HasIndex("CatalogItemStatusId");

                    b.HasIndex("CatalogItemTypeId");

                    b.HasIndex("DeploymentStatusId");

                    b.HasIndex("VersionIdentifier")
                        .IsUnique();

                    b.ToTable("CatalogItems", "realestate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CatalogId = 1,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-WoodenHouse1",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("c8248327-2c41-47f2-b09f-a198eb10f58b")
                        },
                        new
                        {
                            Id = 2,
                            CatalogId = 1,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-WoodenHouse2",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("c2c1c5ae-4433-4cbd-8a61-c4c67575b431")
                        },
                        new
                        {
                            Id = 3,
                            CatalogId = 1,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-WoodenHouse3",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("ff4c6d79-fdb7-4673-b850-a762bf3c5a4a")
                        },
                        new
                        {
                            Id = 4,
                            CatalogId = 1,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-WoodenHouse4",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("ee82569a-1410-4ec2-b499-ba16ecdb3fd4")
                        },
                        new
                        {
                            Id = 5,
                            CatalogId = 2,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-WinterHouse1",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("33d551e5-4886-4606-a5e1-8048bec6b6ba")
                        },
                        new
                        {
                            Id = 6,
                            CatalogId = 2,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-WinterHouse2",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("ea1fe074-c291-4c76-b921-62dfcd5c15a8")
                        },
                        new
                        {
                            Id = 7,
                            CatalogId = 2,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-WinterHouse3",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("4bacb9ce-8b8c-4cac-80ed-1ed0b84ea956")
                        },
                        new
                        {
                            Id = 8,
                            CatalogId = 2,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-WinterHouse4",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("84fe72dc-948f-4b06-bc27-18ed8646029c")
                        },
                        new
                        {
                            Id = 9,
                            CatalogId = 3,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-ModernHouse1",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("3b1cb6d5-31da-47b9-a0f5-1b81aebfb524")
                        },
                        new
                        {
                            Id = 10,
                            CatalogId = 3,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-ModernHouse2",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("55fb6804-2cbf-496a-a1c0-3d9882d3794a")
                        },
                        new
                        {
                            Id = 11,
                            CatalogId = 3,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-ModernHouse3",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("4d04a47b-128c-4b21-87df-f443cbf9d874")
                        },
                        new
                        {
                            Id = 12,
                            CatalogId = 3,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-ModernHouse4",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("776f3702-31b9-43a4-b168-6e3f20a931f8")
                        },
                        new
                        {
                            Id = 13,
                            CatalogId = 4,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-Buildings1",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("1859b32e-f3d0-459a-912b-714e411db2f7")
                        },
                        new
                        {
                            Id = 14,
                            CatalogId = 4,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-Buildings2",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("7d8834f8-826b-42ec-b6df-4226a8e3b5eb")
                        },
                        new
                        {
                            Id = 15,
                            CatalogId = 4,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-Buildings3",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("95f45a7c-3fcf-4db4-a023-cd6ad40a1014")
                        },
                        new
                        {
                            Id = 16,
                            CatalogId = 4,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            Description = "This is description",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1",
                            Name = "CatalogItems-Buildings4",
                            Quote = "Wait...",
                            VersionIdentifier = new Guid("5674b573-b0de-4dd8-9507-85c875be5b65")
                        });
                });

            modelBuilder.Entity("domain.Entities.releastate.CatalogItemStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogItemStatuses", "realestate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#00FF14",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Available"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#F2FF00",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Reserved"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#FF0000",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Sold Out"
                        });
                });

            modelBuilder.Entity("domain.Entities.releastate.CatalogItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogItemTypes", "realestate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "House"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Apartment"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Office Spaces"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Business Spaces"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Building"
                        });
                });

            modelBuilder.Entity("domain.Entities.releastate.CatalogPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogId");

                    b.ToTable("CatalogPeriods", "realestate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CatalogId = 1,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            DateFrom = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enabled = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1"
                        },
                        new
                        {
                            Id = 2,
                            CatalogId = 2,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            DateFrom = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enabled = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1"
                        },
                        new
                        {
                            Id = 3,
                            CatalogId = 1,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            DateFrom = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enabled = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1"
                        },
                        new
                        {
                            Id = 4,
                            CatalogId = 2,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "1",
                            DateFrom = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enabled = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "1"
                        });
                });

            modelBuilder.Entity("domain.Entities.releastate.CatalogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogTypes", "realestate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "House"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Building"
                        });
                });

            modelBuilder.Entity("domain.Entities.releastate.DeploymentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeploymentStatuses", "realestate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Under Construction (Development)"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Request Approval (Staging)"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUser = "d15b15be-0cdc-498d-817c-0b911da8d139",
                            Name = "Approved"
                        });
                });

            modelBuilder.Entity("domain.Entities.users.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("PictureId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("domain.Entities.users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("domain.Entities.users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("domain.Entities.users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("domain.Entities.users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("domain.Entities.crm.Company", b =>
                {
                    b.HasOne("domain.Entities.crm.CompanyType", "CompanyType")
                        .WithMany("Companies")
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Company_CompanyTypeId");

                    b.Navigation("CompanyType");
                });

            modelBuilder.Entity("domain.Entities.releastate.Catalog", b =>
                {
                    b.HasOne("domain.Entities.releastate.CatalogType", "CatalogType")
                        .WithMany("Catalogs")
                        .HasForeignKey("CatalogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Catalog_CatalogTypeId");

                    b.HasOne("domain.Entities.crm.Company", "Company")
                        .WithMany("Catalogs")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Catalog_CompanyId");

                    b.Navigation("CatalogType");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("domain.Entities.releastate.CatalogItem", b =>
                {
                    b.HasOne("domain.Entities.releastate.Catalog", "Catalog")
                        .WithMany("CatalogItems")
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CatalogItem_CatalogId");

                    b.HasOne("domain.Entities.releastate.CatalogItemStatus", "CatalogItemStatus")
                        .WithMany("CatalogItems")
                        .HasForeignKey("CatalogItemStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_CatalogItem_CatalogItemStatusId");

                    b.HasOne("domain.Entities.releastate.CatalogItemType", "CatalogItemType")
                        .WithMany("CatalogItems")
                        .HasForeignKey("CatalogItemTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_CatalogItem_CatalogItemTypeId");

                    b.HasOne("domain.Entities.releastate.DeploymentStatus", "DeploymentStatus")
                        .WithMany("CatalogItems")
                        .HasForeignKey("DeploymentStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_CatalogItem_CdeploymentStatusId");

                    b.Navigation("Catalog");

                    b.Navigation("CatalogItemStatus");

                    b.Navigation("CatalogItemType");

                    b.Navigation("DeploymentStatus");
                });

            modelBuilder.Entity("domain.Entities.releastate.CatalogPeriod", b =>
                {
                    b.HasOne("domain.Entities.releastate.Catalog", "Catalog")
                        .WithMany("CatalogPeriods")
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CatalogPeriod_CatalogId");

                    b.Navigation("Catalog");
                });

            modelBuilder.Entity("domain.Entities.users.User", b =>
                {
                    b.HasOne("domain.Entities.crm.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_User_CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("domain.Entities.crm.Company", b =>
                {
                    b.Navigation("Catalogs");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("domain.Entities.crm.CompanyType", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("domain.Entities.releastate.Catalog", b =>
                {
                    b.Navigation("CatalogItems");

                    b.Navigation("CatalogPeriods");
                });

            modelBuilder.Entity("domain.Entities.releastate.CatalogItemStatus", b =>
                {
                    b.Navigation("CatalogItems");
                });

            modelBuilder.Entity("domain.Entities.releastate.CatalogItemType", b =>
                {
                    b.Navigation("CatalogItems");
                });

            modelBuilder.Entity("domain.Entities.releastate.CatalogType", b =>
                {
                    b.Navigation("Catalogs");
                });

            modelBuilder.Entity("domain.Entities.releastate.DeploymentStatus", b =>
                {
                    b.Navigation("CatalogItems");
                });
#pragma warning restore 612, 618
        }
    }
}
